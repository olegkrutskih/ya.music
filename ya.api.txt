externalAPI.help()

index.js?v=1.102.4:1 Внешний интерфейс для расширений Яндекс.Музыки и Яндекс.Радио. Быстрая справка.
index.js?v=1.102.4:1 ===============================================================================
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Используемые форматы данных
index.js?v=1.102.4:1 ---------------------------
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания обложки:
index.js?v=1.102.4:1   Ссылка на обложку. Либо строка либо набор строк для составных обложек.
index.js?v=1.102.4:1   В ссылке присутствует подстрока "%%", которую требуется заменить на необходимое разрешение.
index.js?v=1.102.4:1   Доступны разрешения 30x30, 50x50, 80x80, 100x100, 200x200, 300x300, 400x400
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания трека:
index.js?v=1.102.4:1   {String} title - название трека
index.js?v=1.102.4:1   {String} link - ссылка на трек
index.js?v=1.102.4:1   {Number} duration - длительность трека в секундах
index.js?v=1.102.4:1   {Boolean} liked - трек залайкан
index.js?v=1.102.4:1   {Boolean} disliked - трек задислайкан
index.js?v=1.102.4:1   {Array.<ExternalAPI~ArtistInfo>} artists - список исполнителей
index.js?v=1.102.4:1   {String} [version] - версия трека
index.js?v=1.102.4:1   {ExternalAPI~AlbumInfo} [album] - альбом трека
index.js?v=1.102.4:1   {ExternalAPI~CoverInfo} [cover] - обложка
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания альбома:
index.js?v=1.102.4:1   {String} title - название альбома
index.js?v=1.102.4:1   {Number} year - год выпуска
index.js?v=1.102.4:1   {String} link - ссылка на альбом
index.js?v=1.102.4:1   {Array.<ExternalAPI~ArtistInfo>} artists - список исполнителей
index.js?v=1.102.4:1   {ExternalAPI~CoverInfo} [cover] - обложка
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания исполнителя:
index.js?v=1.102.4:1   {String} title - имя исполнителя
index.js?v=1.102.4:1   {String} link - ссылка на исполнителя
index.js?v=1.102.4:1   {ExternalAPI~CoverInfo} [cover] - обложка
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания плейлиста:
index.js?v=1.102.4:1   {String} title - название плейлиста
index.js?v=1.102.4:1   {String} owner - имя владельца плейлиста
index.js?v=1.102.4:1   {String} link - ссылка на плейлист
index.js?v=1.102.4:1   {ExternalAPI~CoverInfo} [cover] - обложка
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания элементов управления:
index.js?v=1.102.4:1   index - возможность запускать воспроизведние трека по его индексу
index.js?v=1.102.4:1   next - возможность переключения на следующий трек
index.js?v=1.102.4:1   prev - возможность переключение на предудущий трек
index.js?v=1.102.4:1   shuffle - возможность включать шаффл
index.js?v=1.102.4:1   repeat - возможность включать режим повтора треков
index.js?v=1.102.4:1   like - возможность добавлять трек в избранное
index.js?v=1.102.4:1   dislike - возможность добавлять трек в чёрный список
index.js?v=1.102.4:1 Все поля могут принимать изначения из списка констант:
index.js?v=1.102.4:1   CONTROL_ENABLED - доступно
index.js?v=1.102.4:1   CONTROL_DISABLED - недоступно
index.js?v=1.102.4:1   CONTROL_DENIED - функция отсутствует
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Формат описания временных метрик трека (все значения указываются в секундах):
index.js?v=1.102.4:1   {Number} position - позиция воспроизведения
index.js?v=1.102.4:1   {Number} duration - длительность трека
index.js?v=1.102.4:1   {Number} loaded - длительность загруженной части
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Программный интерфейс
index.js?v=1.102.4:1 ---------------------
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Получение данных о треках и текущем источнике:
index.js?v=1.102.4:1   getCurrentTrack - данные о текущем треке
index.js?v=1.102.4:1   getNextTrack - данные о следующем треке
index.js?v=1.102.4:1   getPrevTrack - данные о предыдущем треке
index.js?v=1.102.4:1   getTracksList - данные о списке треков
index.js?v=1.102.4:1   getTrackIndex - индекс текущего трека в списке треков
index.js?v=1.102.4:1   getSourceInfo - данные о текущем источнике воспроизведения
index.js?v=1.102.4:1   populate(fromIndex, [after], [before], [ordered]) - подгрузка данных о треках в текущий список воспроизведения. В случае выставления флага ordered, треки будут загружаться с учётом порядка воспроизведения, а не положения в списке
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Получение состояния плеера:
index.js?v=1.102.4:1   isPlaying - проверка, что плеер запущен и не на паузе
index.js?v=1.102.4:1   getControls - получение данных о доступности элементов управления
index.js?v=1.102.4:1   getShuffle - получение состояния шаффла (SHUFFLE_ON/SHUFFLE_OFF)
index.js?v=1.102.4:1   getRepeat - получение состояния повтора треков (REPEAT_NONE/REPEAT_ALL/REPEAT_ONE)
index.js?v=1.102.4:1   getVolume - получние текущей громкости
index.js?v=1.102.4:1   getProgress - получение данных о временных метриках трека
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Управление плеером:
index.js?v=1.102.4:1   play([index]) - запуск воспроизведения трека с указанным индексом. Если индекс не указан, будет запущен текущий выбранный трек
index.js?v=1.102.4:1   next - переключение на следующий трек
index.js?v=1.102.4:1   prev - переключение на предыдущий трек
index.js?v=1.102.4:1   togglePause([state]) - поставить трек на паузу/снять паузу
index.js?v=1.102.4:1   toggleLike - добавить трек в избранное/удалить трек из избранного
index.js?v=1.102.4:1   toggleDislike - добавить трек в чёрный список/удалить трек из чёрного списка
index.js?v=1.102.4:1   toggleShuffle([state]) - переключить режим шаффла (SHUFFLE_ON/SHUFFLE_OFF)
index.js?v=1.102.4:1   toggleRepeat([state]) - переключить режим повтора треков (REPEAT_NONE/REPEAT_ALL/REPEAT_ONE)
index.js?v=1.102.4:1   setVolume(value) - установить громкость
index.js?v=1.102.4:1   toggleMute(state) - включит/выключить звук
index.js?v=1.102.4:1   setPosition(value) - установить позицию воспроизведения
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Дополнительные команды:
index.js?v=1.102.4:1   navigate(url) - переход на страницу с указанным адресом. Адрес задаётся без протокола и домена
index.js?v=1.102.4:1
index.js?v=1.102.4:1 События
index.js?v=1.102.4:1 -------
index.js?v=1.102.4:1
index.js?v=1.102.4:1 Все события являются "чистыми" - в обработчик не передаётся никаких данных. Исключением является событие EVENT_ADVERT - в него передаются данные о рекламе, если она началась или false - если закончилась
index.js?v=1.102.4:1
index.js?v=1.102.4:1 EVENT_READY - готовность данного интерфейса
index.js?v=1.102.4:1 EVENT_STATE - изменение состояния плеера
index.js?v=1.102.4:1 EVENT_TRACK - смена трека
index.js?v=1.102.4:1 EVENT_ADVERT - воспроизведение рекламы
index.js?v=1.102.4:1 EVENT_CONTROLS - изменение состояния элементов управления (в т.ч. смены состояния шаффла и повтора треков)
index.js?v=1.102.4:1 EVENT_SOURCE_INFO - смена источника воспроизведения
index.js?v=1.102.4:1 EVENT_TRACKS_LIST - изменения списка треков
index.js?v=1.102.4:1 EVENT_VOLUME - изменение громкости
index.js?v=1.102.4:1 EVENT_PROGRESS - изменение временных метрик трека